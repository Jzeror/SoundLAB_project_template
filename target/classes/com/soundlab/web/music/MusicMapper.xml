<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soundlab.web.music.MusicMapper">

	<select id="realChart" resultType="java.util.Map"
		parameterType="map">
		SELECT
		CAST(@RNUM := @RNUM + 1 AS signed integer )AS NO , A.*
		FROM
		(SELECT
		AL.ALBUM_TITLE,
		AR.ARTIST_NAME,
		MUS.MUSIC_TITLE,
		V.VIEW_DATE,
		COUNT(SEQ_GROUP)AS VIEW_COUNT,
		(SELECT CONCAT(IMG_NAME,'.', EXT)
		FROM IMG WHERE SEQ LIKE AL.ALBUM_SEQ )IMG
		FROM MUSIC MUS
		JOIN VIEW_RECORD V ON V.SEQ_GROUP LIKE MUS.MUSIC_SEQ
		JOIN ALBUM AL ON MUS.ALBUM_SEQ LIKE AL.ALBUM_SEQ
		JOIN ARTIST AR ON MUS.ARTIST_SEQ LIKE AR.ARTIST_SEQ
		WHERE VIEW_DATE LIKE '${todayDate}%'
		GROUP BY SEQ_GROUP
		ORDER BY VIEW_COUNT DESC LIMIT 50)AS A,
		( SELECT @RNUM := 0 )AS B

	</select>
	<select id="dayChart" resultType="java.util.Map"
		parameterType="map">
		SELECT
		CAST(@RNUM := @RNUM + 1 AS signed integer )AS NO , A.*
		FROM
		(SELECT
		AL.ALBUM_TITLE,
		AR.ARTIST_NAME,
		MUS.MUSIC_TITLE,
		V.VIEW_DATE,
		COUNT(SEQ_GROUP)AS VIEW_COUNT,
		(SELECT CONCAT(IMG_NAME,'.', EXT)
		FROM IMG WHERE SEQ LIKE AL.ALBUM_SEQ )IMG
		FROM MUSIC MUS
		JOIN VIEW_RECORD V ON V.SEQ_GROUP LIKE MUS.MUSIC_SEQ
		JOIN ALBUM AL ON MUS.ALBUM_SEQ LIKE AL.ALBUM_SEQ
		JOIN ARTIST AR ON MUS.ARTIST_SEQ LIKE AR.ARTIST_SEQ
		WHERE VIEW_DATE LIKE '${yesterDate}%'
		GROUP BY SEQ_GROUP
		ORDER BY VIEW_COUNT DESC LIMIT 50)AS A,
		( SELECT @RNUM := 0 )AS B

	</select>
	<select id="weekChart" resultType="java.util.Map"
		parameterType="map">
		SELECT
		CAST(@RNUM := @RNUM + 1 AS signed integer )AS NO , A.*
		FROM
		(SELECT
		AL.ALBUM_TITLE,
		AR.ARTIST_NAME,
		MUS.MUSIC_TITLE,
		V.VIEW_DATE,
		COUNT(SEQ_GROUP)AS VIEW_COUNT,
		(SELECT CONCAT(IMG_NAME,'.', EXT)
		FROM IMG WHERE SEQ LIKE AL.ALBUM_SEQ )IMG
		FROM MUSIC MUS
		JOIN VIEW_RECORD V ON V.SEQ_GROUP LIKE MUS.MUSIC_SEQ
		JOIN ALBUM AL ON MUS.ALBUM_SEQ LIKE AL.ALBUM_SEQ
		JOIN ARTIST AR ON MUS.ARTIST_SEQ LIKE AR.ARTIST_SEQ
		WHERE VIEW_DATE BETWEEN '${week1}%' AND '${week2}%'
		GROUP BY SEQ_GROUP
		ORDER BY VIEW_COUNT DESC LIMIT 50)AS A,
		( SELECT @RNUM := 0 )AS B

	</select>

</mapper>