<!-- <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soundlab.web.music.MusicMapper">
	<select id="top50List" resultType="map" parameterType="map">
		<if test="#{id} != null">
			SELECT
			CH.*,
			UD.TYPES
			FROM
		</if>
		(SELECT CAST(@RNUM := @RNUM + 1 AS SIGNED INTEGER) AS NO, A.*
		FROM (
		SELECT
		AL.ALBUM_TITLE,
		AR.ARTIST_NAME,
		MUS.MUSIC_TITLE,
		MUS.MUSIC_SEQ,
		AL.ALBUM_SEQ,
		AR.ARTIST_SEQ,
		COUNT(SEQ_GROUP)VIEW_COUNT,
		( SELECT
		CONCAT(IMG_NAME, '.', EXT)
		FROM IMG
		WHERE SEQ LIKE AL.ALBUM_SEQ) IMG
		FROM MUSIC MUS
		JOIN VIEW_RECORD V ON V.SEQ_GROUP LIKE MUS.MUSIC_SEQ
		JOIN ALBUM AL ON MUS.ALBUM_SEQ LIKE AL.ALBUM_SEQ
		JOIN ARTIST AR ON
		MUS.ARTIST_SEQ LIKE AR.ARTIST_SEQ

		WHERE VIEW_DATE BETWEEN
		CONCAT(#{date1},'%') AND CONCAT(#{date2},'%')
		GROUP BY V.SEQ_GROUP
		ORDER BY VIEW_COUNT DESC LIMIT 30) AS A,
		(SELECT @RNUM := 0) AS B

		<if test="#{id} != null">
			)CH
			LEFT JOIN (SELECT
			*
			FROM(
			SELECT
			MAX(U.UD_SEQ) MAX_SEQ
			FROM
			UPDOWN U
			WHERE MEMBER_ID LIKE #{id}
			GROUP BY U.SEQ_GROUP
			ORDER BY
			U.UD_SEQ DESC
			)A
			JOIN(SELECT * FROM UPDOWN U) B
			ON A.MAX_SEQ LIKE
			B.UD_SEQ
			ORDER BY B.SEQ_GROUP)UD
			ON CH.MUSIC_SEQ LIKE UD.SEQ_GROUP
			GROUP BY CH.MUSIC_TITLE
			ORDER BY NO
		</if>


	</select>

	<select id="top50lineChart" resultType="map" >
		SELECT
		VIEW_DATE,
		GROUP_CONCAT(IF(RANK = 1,MUSIC_TITLE,NULL)) AS R1_TITLE,
		GROUP_CONCAT(IF(RANK = 1,ARTIST_NAME,NULL)) AS R1_NAME,
		GROUP_CONCAT(IF(RANK = 1,SEQ_GROUP,NULL)) AS R1_MSEQ,
		GROUP_CONCAT(IF(RANK = 1,CNT,NULL)) AS R1_CNT,
		GROUP_CONCAT(IF(RANK = 1,PER,NULL)) AS R1_PER,
		GROUP_CONCAT(IF(RANK = 2,MUSIC_TITLE,NULL)) AS R2_TITLE,
		GROUP_CONCAT(IF(RANK = 2,ARTIST_NAME,NULL)) AS R2_NAME,
		GROUP_CONCAT(IF(RANK = 2,SEQ_GROUP,NULL)) AS R2_MSEQ,
		GROUP_CONCAT(IF(RANK = 2,CNT,NULL)) AS R2_CNT,
		GROUP_CONCAT(IF(RANK = 2,PER,NULL)) AS R2_PER,
		GROUP_CONCAT(IF(RANK = 3,MUSIC_TITLE,NULL)) AS R3_TITLE,
		GROUP_CONCAT(IF(RANK = 3,ARTIST_NAME,NULL)) AS R3_NAME,
		GROUP_CONCAT(IF(RANK = 3,SEQ_GROUP,NULL)) AS R3_MSEQ,
		GROUP_CONCAT(IF(RANK = 3,CNT,NULL)) AS R3_CNT,
		GROUP_CONCAT(IF(RANK = 3,PER,NULL)) AS R3_PER
		FROM
		LS_TOP3_NUM
		GROUP BY VIEW_DATE
		ORDER BY VIEW_DATE DESC 
	</select>


	<select id="infiSc" resultType="map" parameterType="map">
		<if test="#{id} != null">
			SELECT
			CH.*,
			UD.TYPES
			FROM
		</if>
		( SELECT C.*
		FROM
		(SELECT CAST(@RNUM := @RNUM + 1 AS SIGNED INTEGER) AS
		NO, A.*
		FROM ( SELECT
		AL.ALBUM_TITLE,
		AR.ARTIST_NAME,
		MUS.MUSIC_TITLE,
		MUS.MUSIC_SEQ,
		AL.ALBUM_SEQ,
		AR.ARTIST_SEQ,
		DATE_FORMAT(V.VIEW_DATE,'%y-%m-%d')AS VIEW_DATE,
		COUNT(SEQ_GROUP)VIEW_COUNT,
		( SELECT CONCAT(IMG_NAME, '.', EXT)
		FROM IMG
		WHERE SEQ LIKE AL.ALBUM_SEQ) IMG
		FROM MUSIC MUS
		JOIN VIEW_RECORD V ON
		V.SEQ_GROUP LIKE MUS.MUSIC_SEQ
		JOIN ALBUM AL ON MUS.ALBUM_SEQ LIKE
		AL.ALBUM_SEQ
		JOIN ARTIST AR ON MUS.ARTIST_SEQ LIKE AR.ARTIST_SEQ

		WHERE
		VIEW_DATE BETWEEN
		CONCAT(#{date1},'%') AND CONCAT(#{date2},'%')


		GROUP BY
		V.SEQ_GROUP
		ORDER BY VIEW_COUNT DESC LIMIT 50) AS A,
		(SELECT @RNUM :=
		0)
		AS B) AS C
		WHERE C.NO BETWEEN #{PageNo} AND
		#{PageNoEnd}
		<if test="#{id} != null">
			)CH
			LEFT JOIN (SELECT
			*
			FROM(
			SELECT
			MAX(U.UD_SEQ) MAX_SEQ
			FROM
			UPDOWN U
			WHERE MEMBER_ID LIKE #{id}
			GROUP BY U.SEQ_GROUP
			ORDER BY
			U.UD_SEQ DESC
			)A
			JOIN(SELECT * FROM UPDOWN U) B
			ON A.MAX_SEQ LIKE
			B.UD_SEQ
			ORDER BY B.SEQ_GROUP)UD
			ON CH.MUSIC_SEQ LIKE UD.SEQ_GROUP
			GROUP BY CH.MUSIC_TITLE
			ORDER BY NO
		</if>

	</select>
</mapper>
 -->